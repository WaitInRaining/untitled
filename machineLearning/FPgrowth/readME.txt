FP-frowth算法是基于Apriori算法实现的，它比Apriori算法要快，在完成相同任务时采用了一些不同的技术。
即将数据集存储在一个特定的称作FP树的结构之后发现频繁项集或者频繁项对，即常在一块出现的元素项的集合FP树。
该算法能够更加有效地发现频繁项集，但是不能用于发现关联规则。

FP-growth算法只需要对数据库进行两次扫描，而Apriori算法对于每个潜在的频繁项集都会扫描数据集判定给定模式是否频繁，
因此FP-growth的速度要比Apriori算法块。

缺点： 实现比较困难，在某些数据集上性能会下降。
FP-growth算法的工作流程如下：
首先构建FP树，然后利用它来挖掘频繁项集。为构建FP树，需要对原始数据集扫描两遍。第一遍对所有元素项的出现次数进行计数，
第二遍扫描哪些频繁元素。
其中对于频繁的定义和Apriori中的定义是一样的